generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model address_list {
  Address    String @db.VarChar(255)
  CustomerID String @db.VarChar(50)

  @@id([Address, CustomerID])
}

model category {
  CategoryName String @id @db.VarChar(100)
  Quantity     Int?
}

model customers {
  CustomerID  String   @id @db.VarChar(50)
  Lname       String?  @db.VarChar(50)
  Fname       String?  @db.VarChar(50)
  Email       String?  @db.VarChar(100)
  Tel         String?  @db.VarChar(15)
  AccountID   String?  @db.VarChar(50)
  AccountName String?  @db.VarChar(50)
  Password    String?  @db.VarChar(100)
  orders      orders[]
}

model employees {
  EmployeeID  String    @id @db.VarChar(50)
  FName       String?   @db.VarChar(50)
  LName       String?   @db.VarChar(50)
  Sex         String?   @db.VarChar(10)
  Birthday    DateTime? @db.Date
  Email       String?   @db.VarChar(100)
  Tel         String?   @db.VarChar(15)
  Address     String?   @db.VarChar(255)
  WorkShift   String?   @db.VarChar(50)
  Position    String?   @db.VarChar(50)
  Status      String?   @db.VarChar(50)
  StartDate   DateTime? @db.Date
  Salary      Decimal?  @db.Decimal(15, 2)
  AccountID   String?   @db.VarChar(50)
  AccountName String?   @db.VarChar(50)
  Password    String?   @db.VarChar(100)
}

model orders {
  OrderID         String     @id @db.VarChar(50)
  ShippingAddress String?    @db.VarChar(255)
  OrderDate       DateTime?  @db.Date
  OrderStatus     String?    @db.VarChar(50)
  PaymentStatus   String?    @db.VarChar(50)
  TotalAmount     Decimal?   @db.Decimal(15, 2)
  Discount        Decimal?   @db.Decimal(15, 2)
  TotalDue        Decimal?   @db.Decimal(15, 2)
  CustomerID      String?    @db.VarChar(50)
  customers       customers? @relation(fields: [CustomerID], references: [CustomerID], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([CustomerID], map: "orders_ibfk_1")
}

model payment {
  OrderID     String?           @db.VarChar(50)
  PaymentID   String            @id @db.VarChar(50)
  Cash        payment_Cash?
  Transfer    payment_Transfer?
  PaymentDate DateTime?         @db.Date
}

model products {
  ProductID   String  @id @db.VarChar(50)
  ProductName String? @db.VarChar(100)
  BasePrice   String? @db.VarChar(50)
  SalePrice   String? @db.VarChar(50)
  Supplier    String? @db.VarChar(100)
  InStock     Int?
  Category    String? @db.VarChar(100)
  Usage       String? @db.VarChar(255)
  Description String? @db.VarChar(255)
  Vehicle     String? @db.VarChar(100)
  Unit        String? @db.VarChar(50)
  Notes       String? @db.VarChar(255)
}

model products_in_category {
  ProductID String @db.VarChar(50)
  Category  String @db.VarChar(100)

  @@id([ProductID, Category])
}

model products_in_orders {
  ID        Int    @id @default(autoincrement())
  ProductID String @db.VarChar(50)
  InStock   Int?   @default(0)
  OrderID   String @db.VarChar(50)
}

model promotion {
  PromoCode String    @id @db.VarChar(50)
  PromoName String?   @db.VarChar(100)
  Quantity  Int?
  StartDate DateTime? @db.Date
  EndDate   DateTime? @db.Date
  PromoRate Decimal?  @db.Decimal(5, 2)
  MinValue  Decimal?  @db.Decimal(15, 2)
  MaxAmount Decimal?  @db.Decimal(15, 2)
}

model supporter_of_orders {
  OrderID    String @db.VarChar(50)
  EmployeeID String @db.VarChar(50)

  @@id([OrderID, EmployeeID])
}

model used_promocodes {
  PromoCode String @db.VarChar(50)
  OrderID   String @db.VarChar(50)

  @@id([PromoCode, OrderID])
}

model vehicle {
  Vehicle   String @db.VarChar(100)
  ProductID String @db.VarChar(50)

  @@id([Vehicle, ProductID])
}

enum payment_Cash {
  yes
  no
}

enum payment_Transfer {
  yes
  no
}
